{"version":3,"sources":["api/axiosGithubUsers.ts","api/apiGithubUsers.ts","features/userEvents/epics.ts","features/userList/epics.ts","features/userRepos/epics.ts","app/rootEpic.ts","features/user/epics.ts","app/rootReducer.ts","app/store.ts","index.tsx","features/userList/UserListItem.tsx","features/userList/UserListPage.tsx","common/hooks/useInfiniteScroll.ts","app/App.tsx","common/components/Header/Header.tsx","common/components/UserCard/UserCard.tsx","common/components/Spinner/Spinner.tsx","common/components/ErrorBox/ErrorBox.tsx","common/components/ButtonLink/ButtonLink.tsx","features/userList/usersSlice.ts","common/components/UserCard/UserCard.module.scss","features/user/userDetailsSlice.ts","features/userEvents/userEventsSlice.ts","features/userRepos/userReposSlice.ts","common/components/Header/Header.module.scss","app/config.ts","common/components/AvatarImage/AvatarImage.tsx","common/components/AvatarImage/AvatarImage.module.scss","features/userList/UserListItem.module.scss","common/hooks/useDocumentTitle.ts","common/components/Spinner/Spinner.module.scss","common/components/ErrorBox/ErrorBox.module.scss","common/components/ButtonLink/ButtonLink.module.scss","features/userList/UserListPage.module.scss"],"names":["instance","axios","create","baseURL","timeout","a","since","get","params","per_page","USERS_PER_PAGE","usersResponse","pageLinks","parseLink","headers","link","isLastPage","hasOwnProperty","items","data","login","url","EVENTS_PER_PAGE","page","REPOS_PER_PAGE","EventItem","eventResponse","action","payload","date","created_at","id","repo","name","type","urlPR","pull_request","html_url","UserItem","userResponse","avatarUrl","avatar_url","RepoItem","repoResponse","rootEpic","combineEpics","action$","state$","pipe","filter","isOfType","getUsersStart","throttleTime","switchMap","from","getUsers","value","users","map","response","getUsersSuccess","catchError","error","Promise","resolve","message","getUsersFailure","getUserDetailsStart","getUserDetails","publicRepos","public_repos","userDetails","getUserDetailsSuccess","getUserDetailsFailure","getEventsStart","getEvents","ev","events","getEventsSuccess","getEventsFailure","getReposStart","getRepos","repos","getReposSuccess","getReposFailure","rootReducer","combineReducers","userDetailsReducer","userEvents","userEventsReducer","userRepos","userReposReducer","usersReducer","epicMiddleware","createEpicMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","reducer","run","App","require","default","ReactDOM","render","StrictMode","basename","process","document","getElementById","UserListItem","React","user","useSelector","state","usersByLogin","className","styles","item","footer","to","UserListPage","visibleUsers","loading","usersError","bottomBoundaryRef","useRef","useDocumentTitle","scrollRef","onScroll","dispatch","useDispatch","scrollObserver","useCallback","node","IntersectionObserver","entries","forEach","en","intersectionRatio","observe","useEffect","current","useInfiniteScroll","list","key","ref","UserPage","lazy","ErrorPage","withBackLink","useLocation","pathname","split","fallback","path","exact","component","Header","header","back","logoBox","git","UserCard","lg","classnames","body","AvatarImage","src","alt","SelectableTypes","Profile","List","info","href","gitLink","Spinner","spinner","ErrorBox","ButtonLink","onClick","children","rest","btn","createSlice","initialState","reducers","toLowerCase","length","actions","module","exports","detailsByUser","_action","eventsByUser","reposByUser","currentUserRepos","ava","title","useLayoutEffect"],"mappings":"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","file":"static/js/main.bb59da36.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.github.com/users',\n    timeout: 10000,\n})\n\nexport default instance\n","import parseLink from 'parse-link-header'\n\nimport { EVENTS_PER_PAGE, REPOS_PER_PAGE, USERS_PER_PAGE } from 'app/config'\nimport {\n    EventResponse,\n    EventsResponse,\n    RepoResponse,\n    ReposResponse,\n    UserDetailsResponse,\n    UserResponse,\n    UsersResponse,\n} from 'app/types'\n\nimport axios from './axiosGithubUsers'\n\nexport async function getUsers(since: number = 0): Promise<UsersResponse> {\n    try {\n        const usersResponse = await axios.get<UserResponse[]>('', {\n            params: { since, per_page: USERS_PER_PAGE },\n        })\n\n        const pageLinks = parseLink(usersResponse.headers.link)\n        const isLastPage = !pageLinks?.hasOwnProperty('next')\n\n        return {\n            isLastPage,\n            items: usersResponse.data,\n        }\n    } catch (err) {\n        throw err\n    }\n}\n\nexport async function getUserDetails(login: string): Promise<UserDetailsResponse> {\n    try {\n        const { data } = await axios.get<UserDetailsResponse>(`/${login}`)\n\n        return data\n    } catch (err) {\n        throw err\n    }\n}\n\nexport async function getEvents(login: string): Promise<EventsResponse> {\n    const url = `/${login}/events/public?page=0&per_page=${EVENTS_PER_PAGE}`\n    try {\n        const { data } = await axios.get<EventResponse[]>(url)\n\n        return {\n            items: data,\n        }\n    } catch (err) {\n        throw err\n    }\n}\n\nexport async function getRepos(login: string, page: number = 0): Promise<ReposResponse> {\n    const url = `/${login}/repos?page=${page}&per_page=${REPOS_PER_PAGE}&sort=created`\n    try {\n        const { data } = await axios.get<RepoResponse[]>(url)\n\n        return {\n            items: data,\n        }\n    } catch (err) {\n        throw err\n    }\n}\n","import { ActionsObservable } from 'redux-observable'\nimport { from } from 'rxjs'\nimport { catchError, filter, map, switchMap } from 'rxjs/operators'\nimport { isOfType } from 'typesafe-actions'\nimport { getEvents } from 'api/apiGithubUsers'\nimport { Event, EventResponse, EventsResponse } from 'app/types'\n\nimport { EventsAction, GetEventsAction, getEventsFailure, getEventsStart, getEventsSuccess } from './userEventsSlice'\n\nconst FILTER_EVENT_TYPE = 'PullRequestEvent'\n\nconst EventItem = (eventResponse: EventResponse): Event => ({\n    action: eventResponse.payload.action,\n    date: eventResponse.created_at,\n    id: eventResponse.id,\n    repo: { id: eventResponse.repo.id, name: eventResponse.repo.name },\n    type: eventResponse.type,\n    urlPR: eventResponse.payload.pull_request?.html_url,\n})\n\nexport const getUserEventsEpic = (action$: ActionsObservable<EventsAction>) =>\n    action$.pipe(\n        filter(isOfType(getEventsStart.type)),\n        map((action) => action as GetEventsAction),\n        switchMap((action) => {\n            return from(getEvents(action.payload.login)).pipe(\n                map((response: EventsResponse) =>\n                    response.items.filter((ev) => ev.type === FILTER_EVENT_TYPE).map(EventItem)\n                ),\n                map((events) => getEventsSuccess({ login: action.payload.login, events })),\n                catchError(async (error) =>\n                    Promise.resolve({\n                        payload: error.message,\n                        type: getEventsFailure.type,\n                    })\n                )\n            )\n        })\n    )\n","import { ActionsObservable, StateObservable } from 'redux-observable'\nimport { from } from 'rxjs'\nimport { throttleTime, catchError, filter, map, switchMap } from 'rxjs/operators'\nimport { isOfType } from 'typesafe-actions'\nimport { getUsers } from 'api/apiGithubUsers'\nimport { User, UserResponse, UsersResponse } from 'app/types'\n\nimport { UsersAction, getUsersFailure, getUsersStart, getUsersSuccess } from './usersSlice'\n\nconst UserItem = (userResponse: UserResponse): User => ({\n    avatarUrl: userResponse.avatar_url,\n    id: userResponse.id,\n    login: userResponse.login,\n})\n\nexport const getUsersEpic = (action$: ActionsObservable<UsersAction>, state$: StateObservable<any>) =>\n    action$.pipe(\n        filter(isOfType(getUsersStart.type)),\n        throttleTime(500),\n        switchMap(() =>\n            from(getUsers(state$.value.users.since)).pipe(\n                map((response: UsersResponse) => ({\n                    users: response.items.map(UserItem),\n                    isLastPage: response.isLastPage,\n                })),\n                map((data) => getUsersSuccess(data)),\n                catchError(async (error) =>\n                    Promise.resolve({\n                        payload: error.message,\n                        type: getUsersFailure.type,\n                    })\n                )\n            )\n        )\n    )\n","import { ActionsObservable } from 'redux-observable'\nimport { from } from 'rxjs'\nimport { catchError, filter, map, switchMap } from 'rxjs/operators'\nimport { isOfType } from 'typesafe-actions'\nimport { getRepos } from 'api/apiGithubUsers'\nimport { Repo, RepoResponse, ReposResponse } from 'app/types'\n\nimport { GetReposAction, ReposAction, getReposFailure, getReposStart, getReposSuccess } from './userReposSlice'\n\nconst RepoItem = (repoResponse: RepoResponse): Repo => ({\n    id: repoResponse.id,\n    name: repoResponse.name,\n})\n\nexport const getUserReposEpic = (action$: ActionsObservable<ReposAction>) =>\n    action$.pipe(\n        filter(isOfType(getReposStart.type)),\n        map((action) => action as GetReposAction),\n        switchMap((action) => {\n            return from(getRepos(action.payload.login, action.payload.page)).pipe(\n                map((response: ReposResponse) => response.items.map(RepoItem)),\n                map((repos) => getReposSuccess({ login: action.payload.login, repos })),\n                catchError(async (error) =>\n                    Promise.resolve({\n                        payload: error.message,\n                        type: getReposFailure.type,\n                    })\n                )\n            )\n        })\n    )\n","import { combineEpics } from 'redux-observable'\n\nimport { getUserDetailsEpic } from 'features/user/epics'\nimport { getUserEventsEpic } from 'features/userEvents/epics'\nimport { getUsersEpic } from 'features/userList/epics'\nimport { getUserReposEpic } from 'features/userRepos/epics'\n\nconst rootEpic = combineEpics(getUsersEpic, getUserDetailsEpic, getUserEventsEpic, getUserReposEpic)\n\nexport default rootEpic\n","import { ActionsObservable } from 'redux-observable'\nimport { from } from 'rxjs'\nimport { catchError, filter, map, switchMap } from 'rxjs/operators'\nimport { isOfType } from 'typesafe-actions'\nimport { getUserDetails } from 'api/apiGithubUsers'\nimport { UserDetails as Details, UserDetailsResponse } from 'app/types'\n\nimport {\n    GetUserDetailsAction,\n    UserAction,\n    getUserDetailsFailure,\n    getUserDetailsStart,\n    getUserDetailsSuccess,\n} from './userDetailsSlice'\n\nconst UserDetails = (userResponse: UserDetailsResponse): Details => ({\n    avatarUrl: userResponse.avatar_url,\n    id: userResponse.id,\n    login: userResponse.login,\n    name: userResponse.name,\n    publicRepos: userResponse.public_repos,\n})\n\nexport const getUserDetailsEpic = (action$: ActionsObservable<UserAction>) =>\n    action$.pipe(\n        filter(isOfType(getUserDetailsStart.type)),\n        map((action) => action as GetUserDetailsAction),\n        switchMap((action) =>\n            from(getUserDetails(action.payload.login)).pipe(\n                map((response: UserDetailsResponse) => UserDetails(response)),\n                map((userDetails) => getUserDetailsSuccess(userDetails)),\n                catchError(async (error) =>\n                    Promise.resolve({\n                        payload: error.message,\n                        type: getUserDetailsFailure.type,\n                    })\n                )\n            )\n        )\n    )\n","import { combineReducers } from 'redux'\n\nimport userDetailsReducer from 'features/user/userDetailsSlice'\nimport userEventsReducer from 'features/userEvents/userEventsSlice'\nimport usersReducer from 'features/userList/usersSlice'\nimport userReposReducer from 'features/userRepos/userReposSlice'\n\nconst rootReducer = combineReducers({\n    userDetails: userDetailsReducer,\n    userEvents: userEventsReducer,\n    userRepos: userReposReducer,\n    users: usersReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { createEpicMiddleware } from 'redux-observable'\n\nimport rootEpic from './rootEpic'\nimport rootReducer from './rootReducer'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst store = configureStore({\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(epicMiddleware),\n    reducer: rootReducer,\n})\n\n/* enable HMR for reducers */\nif (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./rootReducer', () => {\n        const newRootReducer = require('./rootReducer').default\n        store.replaceReducer(newRootReducer)\n    })\n}\n\nepicMiddleware.run(rootEpic)\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport store from 'app/store'\n\nimport './index.scss'\n\nconst render = () => {\n    const App = require('./app/App').default\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <App />\n                </Router>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    )\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./app/App', render)\n}\n","import * as React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { RootState } from 'app/rootReducer'\nimport { UserCard } from 'common/components'\n\nimport styles from './UserListItem.module.scss'\n\ninterface ULIProps {\n    login: string\n}\n\nexport const UserListItem = React.memo(({ login }: ULIProps) => {\n    const { usersByLogin } = useSelector((state: RootState) => state.users)\n\n    const user = usersByLogin[login]\n\n    if (!user) {\n        return <></>\n    }\n\n    return (\n        <div className={styles.item}>\n            <UserCard user={user} />\n            <div className={styles.footer}>\n                <Link to={`/user/${login}`}>Details</Link>\n            </div>\n        </div>\n    )\n})\n","import React, { useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from 'app/rootReducer'\nimport { ErrorBox, Spinner } from 'common/components'\nimport useDocumentTitle from 'common/hooks/useDocumentTitle'\nimport useInfiniteScroll from 'common/hooks/useInfiniteScroll'\n\nimport { UserListItem } from './UserListItem'\nimport styles from './UserListPage.module.scss'\nimport { getUsersStart } from './usersSlice'\n\nexport const UserListPage: React.FC = () => {\n    const { visibleUsers, loading, error: usersError, isLastPage } = useSelector((state: RootState) => state.users)\n\n    const bottomBoundaryRef = useRef(null)\n\n    useDocumentTitle()\n\n    useInfiniteScroll(bottomBoundaryRef, getUsersStart)\n\n    const list = (\n        <div className={styles.list}>\n            {visibleUsers.map((login) => (\n                <UserListItem key={login} login={login} />\n            ))}\n        </div>\n    )\n\n    return (\n        <>\n            {list}\n            {loading && <Spinner />}\n            {usersError && <ErrorBox message={usersError} />}\n            {!isLastPage && <div ref={bottomBoundaryRef} />}\n        </>\n    )\n}\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ActionCreator } from 'typesafe-actions'\n\n// infinite scrolling with intersection observer\nexport default (scrollRef: any, onScroll: ActionCreator) => {\n    const dispatch = useDispatch()\n    const scrollObserver = useCallback(\n        (node) => {\n            new IntersectionObserver((entries) => {\n                entries.forEach((en) => {\n                    if (en.intersectionRatio > 0) {\n                        dispatch(onScroll())\n                    }\n                })\n            }).observe(node)\n        },\n        [onScroll, dispatch]\n    )\n    useEffect(() => {\n        if (scrollRef.current) {\n            scrollObserver(scrollRef.current)\n        }\n    }, [scrollObserver, scrollRef, onScroll])\n}\n","import React, { Suspense } from 'react'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { UserListPage } from 'features/userList/UserListPage'\n\nimport { Header, Spinner } from 'common/components'\n\nimport './App.scss'\n\nconst UserPage = React.lazy(async () => {\n    return import('features/user/UserPage')\n})\n\nconst ErrorPage = React.lazy(async () => {\n    return import('features/error/ErrorPage')\n})\n\nconst App: React.FC = () => {\n    const location = useLocation()\n\n    const withBackLink = location.pathname.split('/')[1] === 'user'\n\n    return (\n        <>\n            <Header withBackLink={withBackLink} />\n            <main>\n                <Suspense fallback={<Spinner />}>\n                    <Switch>\n                        <Route path=\"/user/:login\" exact component={UserPage} />\n                        <Route path=\"/\" exact component={UserListPage} />\n                        <Route component={ErrorPage} />\n                    </Switch>\n                </Suspense>\n            </main>\n        </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport styles from './Header.module.scss'\n\ninterface HProps {\n    withBackLink?: boolean\n}\n\nexport const Header: React.FC<HProps> = ({ withBackLink = false }) => {\n    return (\n        <header className={styles.header}>\n            {withBackLink && (\n                <div className={styles.back}>\n                    <Link to=\"/\">Back</Link>\n                </div>\n            )}\n            <div className={styles.logoBox}>\n                <i className={styles.git} />\n                <h1>GitHub Users</h1>\n            </div>\n        </header>\n    )\n}\n","import classnames from 'classnames'\nimport React from 'react'\n\nimport AvatarImage, { SelectableTypes } from '../AvatarImage'\n\nimport styles from './UserCard.module.scss'\n\ninterface UCProps {\n    user: {\n        name?: string | null\n        login: string\n        id: number\n        avatarUrl: string\n    }\n    lg?: boolean\n}\n\nexport const UserCard = ({ user, lg = false }: UCProps) => {\n    const { id, login, avatarUrl, name } = user\n\n    return (\n        <div className={classnames('card', styles.body, { [styles.lg]: lg })}>\n            <AvatarImage src={avatarUrl} alt={login} type={lg ? SelectableTypes.Profile : SelectableTypes.List} />\n\n            <div className={styles.info}>\n                {name && <h3 className={styles.name}>{name}</h3>}\n                <h4 className={styles.login}>@{login}</h4>\n\n                <div>\n                    <span>ID: #{id}</span>\n                </div>\n\n                <a href={`https://github.com/${login}`} className={styles.gitLink}>\n                    <i className={styles.git} />\n                    GitHub Page\n                </a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport styles from './Spinner.module.scss'\n\nexport const Spinner: React.FC = () => {\n    return <div className={styles.spinner} />\n}\n","import React from 'react'\n\nimport styles from './ErrorBox.module.scss'\n\ninterface EAProps {\n    message: string\n}\n\nexport const ErrorBox = ({ message }: EAProps) => {\n    return (\n        <div className={styles.error}>\n            <p>{message}</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport classnames from 'classnames'\n\nimport styles from './ButtonLink.module.scss'\n\ninterface BProps {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => void\n    className?: string\n}\n\nexport const ButtonLink: React.FC<BProps> = ({ onClick, className, children, ...rest }) => {\n    return (\n        <button {...rest} className={classnames(styles.btn, className)} onClick={onClick}>\n            {children}\n        </button>\n    )\n}\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\n\nimport { User } from 'app/types'\n\nexport interface UsersState {\n    usersByLogin: Record<string, User>\n    visibleUsers: string[]\n    loading: boolean\n    error: string | null\n    since: number\n    isLastPage: boolean\n}\n\nconst usersInitialState: UsersState = {\n    error: null,\n    isLastPage: false,\n    loading: false,\n    since: 0,\n    usersByLogin: {},\n    visibleUsers: [],\n}\n\ninterface UsersPayload {\n    isLastPage: boolean\n    users: User[]\n}\n\nconst users = createSlice({\n    name: 'users',\n    initialState: usersInitialState,\n    reducers: {\n        getUsersStart(state: UsersState): void {\n            state.loading = true\n            state.error = null\n        },\n        getUsersSuccess(state: UsersState, { payload }: PayloadAction<UsersPayload>): void {\n            state.loading = false\n            state.error = null\n            payload.users.forEach((user) => {\n                state.usersByLogin[user.login.toLowerCase()] = user\n            })\n            state.visibleUsers = state.visibleUsers.concat(payload.users.map((user) => user.login.toLowerCase()))\n            state.since = state.visibleUsers.length\n                ? state.usersByLogin[state.visibleUsers[state.visibleUsers.length - 1]].id\n                : 0\n            state.isLastPage = payload.isLastPage\n        },\n        getUsersFailure(state: UsersState, { payload }: PayloadAction<string>): void {\n            state.loading = false\n            state.error = payload\n        },\n    },\n})\n\nexport const { getUsersStart, getUsersSuccess, getUsersFailure } = users.actions\n\nexport default users.reducer\n\n// ACTIONS\nexport interface GetUsersAction {\n    type: 'users/getUsersStart'\n}\n\nexport interface GetUsersSuccessAction {\n    type: 'users/getUsersSuccess'\n    payload: UsersPayload\n}\n\nexport interface GetUsersFailureAction {\n    type: 'users/getUsersFailure'\n    payload: string\n}\n\nexport type UsersAction = GetUsersAction | GetUsersSuccessAction | GetUsersFailureAction\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"UserCard_body__2r8Ii\",\"lg\":\"UserCard_lg__1Mf6J\",\"info\":\"UserCard_info__1ThQU\",\"gitLink\":\"UserCard_gitLink__B78ai\",\"git\":\"UserCard_git__3TRn_\",\"login\":\"UserCard_login__2evx8\",\"name\":\"UserCard_name__s-Gf2\"};","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\n\nimport { UserDetails } from 'app/types'\n\nexport interface DetailsState {\n    detailsByUser: Record<string, UserDetails | undefined>\n    loading: boolean\n    error: string | null\n}\n\nconst initialState: DetailsState = {\n    detailsByUser: {},\n    error: null,\n    loading: false,\n}\n\ninterface StartPayload {\n    login: string\n}\n\nconst userDetails = createSlice({\n    name: 'userDetails',\n    initialState,\n    reducers: {\n        getUserDetailsStart(state, _action: PayloadAction<StartPayload>): void {\n            state.loading = true\n            state.error = null\n        },\n        getUserDetailsSuccess(state: DetailsState, action: PayloadAction<UserDetails>): void {\n            state.loading = false\n            state.error = null\n            const { id, login, avatarUrl, name, publicRepos } = action.payload\n            state.detailsByUser[login.toLowerCase()] = {\n                avatarUrl,\n                id,\n                login,\n                name,\n                publicRepos,\n            }\n        },\n        getUserDetailsFailure(state: DetailsState, action: PayloadAction<string>): void {\n            state.loading = false\n            state.error = action.payload\n        },\n    },\n})\n\nexport const { getUserDetailsStart, getUserDetailsSuccess, getUserDetailsFailure } = userDetails.actions\n\nexport default userDetails.reducer\n\n// ACTIONS\nexport interface GetUserDetailsAction {\n    type: 'userDetails/getUserDetailsStart'\n    payload: StartPayload\n}\n\nexport interface GetUserDetailsSuccessAction {\n    type: 'userDetails/getUserDetailsSuccess'\n    payload: UserDetails\n}\n\nexport interface GetUserDetailsFailureAction {\n    type: 'userDetails/getUserDetailsFailure'\n    payload: string\n}\n\nexport type UserAction = GetUserDetailsAction | GetUserDetailsSuccessAction | GetUserDetailsFailureAction\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\n\nimport { Event } from 'app/types'\n\nexport interface EventsState {\n    eventsByUser: Record<string, Event[] | undefined>\n    loading: boolean\n    error: string | null\n}\n\nconst initialState: EventsState = {\n    error: null,\n    eventsByUser: {},\n    loading: false,\n}\n\ninterface EventsPayload {\n    login: string\n    events: Event[]\n}\n\ninterface StartPayload {\n    login: string\n}\n\nconst events = createSlice({\n    name: 'events',\n    initialState,\n    reducers: {\n        getEventsStart(state: EventsState, _action: PayloadAction<StartPayload>): void {\n            state.loading = true\n            state.error = null\n        },\n        getEventsSuccess(state: EventsState, action: PayloadAction<EventsPayload>): void {\n            const { login } = action.payload\n            state.eventsByUser[login.toLowerCase()] = action.payload.events\n            state.loading = false\n            state.error = null\n        },\n        getEventsFailure(state: EventsState, action: PayloadAction<string>): void {\n            state.loading = false\n            state.error = action.payload\n        },\n    },\n})\n\nexport const { getEventsStart, getEventsSuccess, getEventsFailure } = events.actions\n\nexport default events.reducer\n\n// ACTIONS\nexport interface GetEventsAction {\n    type: 'events/getEventsStart'\n    payload: StartPayload\n}\n\nexport interface GetEventsSuccessAction {\n    type: 'events/getEventsSuccess'\n    payload: EventsPayload\n}\n\nexport interface GetEventsFailureAction {\n    type: 'events/getEventsFailure'\n    payload: string\n}\n\nexport type EventsAction = GetEventsAction | GetEventsSuccessAction | GetEventsFailureAction\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\n\nimport { Repo } from 'app/types'\n\nexport interface ReposState {\n    reposByUser: Record<string, Repo[] | undefined>\n    loading: boolean\n    error: string | null\n}\n\nexport const initialState: ReposState = {\n    error: null,\n    loading: false,\n    reposByUser: {},\n}\n\ninterface ReposPayload {\n    login: string\n    repos: Repo[]\n}\n\ninterface StartPayload {\n    login: string\n    page: number\n}\n\nconst repos = createSlice({\n    name: 'repos',\n    initialState,\n    reducers: {\n        getReposStart(state: ReposState, _action: PayloadAction<StartPayload>): void {\n            state.loading = true\n            state.error = null\n        },\n        getReposSuccess(state: ReposState, action: PayloadAction<ReposPayload>): void {\n            state.loading = false\n            state.error = null\n            const login = action.payload.login.toLowerCase()\n            const currentUserRepos = state.reposByUser[login] || []\n            state.reposByUser[login] = [...currentUserRepos, ...action.payload.repos]\n        },\n        getReposFailure(state: ReposState, action: PayloadAction<string>): void {\n            state.loading = false\n            state.error = action.payload\n        },\n    },\n})\n\nexport const { getReposStart, getReposSuccess, getReposFailure } = repos.actions\n\nexport default repos.reducer\n\n// ACTIONS\nexport interface GetReposAction {\n    type: 'repos/getReposStart'\n    payload: StartPayload\n}\n\nexport interface GetReposSuccessAction {\n    type: 'repos/getReposSuccess'\n    payload: ReposPayload\n}\n\nexport interface GetReposFailureAction {\n    type: 'repos/getReposFailure'\n    payload: string\n}\n\nexport type ReposAction = GetReposAction | GetReposSuccessAction | GetReposFailureAction\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1X_E4\",\"back\":\"Header_back__1r-Cq\",\"logoBox\":\"Header_logoBox__1_ElQ\",\"git\":\"Header_git__3TAgP\"};","export const USERS_PER_PAGE = 30\nexport const REPOS_PER_PAGE = 20\nexport const EVENTS_PER_PAGE = 100\n","import classnames from 'classnames'\nimport React from 'react'\n\nimport { MakeRequired } from 'app/types'\n\nimport styles from './AvatarImage.module.scss'\n\nenum SelectableTypes {\n    List = 'list',\n    Profile = 'profile',\n    Timeline = 'timeline',\n}\n\ntype AIProps = Omit<MakeRequired<JSX.IntrinsicElements['img'], 'alt' | 'src'>, 'className'> & {\n    type: SelectableTypes\n}\n\nconst AvatarImage = ({ alt, type, ...rest }: AIProps) => {\n    return <img {...rest} alt={alt} className={classnames(styles.ava, styles[type])} />\n}\n\nexport { SelectableTypes }\nexport default AvatarImage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"AvatarImage_ava__azuWj\",\"timeline\":\"AvatarImage_timeline__26fB8\",\"list\":\"AvatarImage_list__3KZD3\",\"profile\":\"AvatarImage_profile__1oJ9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UserListItem_item__17e9M\",\"footer\":\"UserListItem_footer__TDMJE\"};","import { useLayoutEffect } from 'react'\n\nexport default function useDocumentTitle(title?: string): void {\n    useLayoutEffect(() => {\n        document.title = title ? title + ' | GitHub Users' : 'GitHub Users'\n    }, [title])\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__UKmoP\",\"spin\":\"Spinner_spin__1vpI4\",\"small\":\"Spinner_small__y7_Nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorBox_error__VXGQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonLink_btn__28M6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UserListPage_list__XuLHj\"};"],"sourceRoot":""}